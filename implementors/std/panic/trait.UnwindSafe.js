(function() {var implementors = {};
implementors["smithay_client_toolkit"] = [{"text":"impl !UnwindSafe for DataDevice","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DndEvent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataOffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadPipe","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataSourceEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WritePipe","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataDeviceHandler","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for Environment&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for SimpleGlobal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OutputHandler","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OutputListener","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OutputStatusListener","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for XdgOutputHandler","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrimarySelectionDevice","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrimarySelectionOffer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrimarySelectionSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimarySelectionSourceEvent","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrimarySelectionHandler","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PrimarySelectionDeviceManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RMLVO","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifiersState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepeatKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RepeatSource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ThemeSpec&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThemeManager","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThemedPointer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeatData","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SeatHandler","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SeatListener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ShellHandler","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DoubleMemPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MemPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ShmHandler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConceptConfig","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConceptFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Decorations","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for Window&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FrameRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonColorSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ARGBColor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WaylandSource","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()